{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import stylistic from '@stylistic/eslint-plugin';\n// import eslint from '@eslint/js';\n// import tseslint, { type ConfigArray } from 'typescript-eslint';\nimport { type ConfigArray } from 'typescript-eslint';\n\ntype Severity = 0 | 1 | 2;\ntype SeverityString = 'error' | 'off' | 'warn';\ntype RuleLevel = Severity | SeverityString;\ntype RuleLevelAndOptions = [RuleLevel, ...unknown[]];\ntype RuleEntry = RuleLevel | RuleLevelAndOptions;\ntype Rules = Record<string, RuleEntry>;\ntype ESConfig = {\n  plugins?: Record<string, typeof stylistic>,\n  rules?: Rules\n};\n\nconst basic_rules: Rules = {\n  'no-shadow': [ 'error', { hoist: 'all', builtinGlobals: true } ],\n  'require-atomic-updates': 'off',\n  'no-console': [ 'error', { allow: [ 'error', 'warn' ] } ],\n  // restricted, deprecated or future features\n  'no-restricted-properties': [\n    'error',\n    { property: 'substring', message: 'Please use slice to cut strings.' },\n    { property: 'substr', message: 'Please use slice to cut strings.' }\n    // { property: 'only', message: 'Don\\'t leave .only in tests.' }\n  ]\n};\n\nconst config_typescript: Rules = {\n  ...basic_rules,\n  '@typescript-eslint/prefer-nullish-coalescing': 'off',\n  '@typescript-eslint/no-explicit-any': 'off',\n  '@typescript-eslint/no-unused-vars': [ 'warn', { caughtErrors: 'none' } ],\n  '@typescript-eslint/ban-ts-comment': [ 'error', { 'ts-check': false, 'ts-expect-error': 'allow-with-description', 'ts-ignore': false, 'ts-nocheck': false } ],\n  '@typescript-eslint/no-unsafe-argument': 'off',\n  '@typescript-eslint/no-inferrable-types': 'off',\n  '@typescript-eslint/no-unsafe-member-access': 'off',\n  '@typescript-eslint/no-unsafe-return': 'off',\n  '@typescript-eslint/no-base-to-string': 'off',\n  '@typescript-eslint/prefer-optional-chain': 'warn',\n  '@typescript-eslint/prefer-for-of': 'warn',\n  '@typescript-eslint/consistent-type-definitions': [ 'error', 'type' ],\n  '@typescript-eslint/no-empty-function': 'off'\n};\n\nconst config_style: Rules = {\n  '@stylistic/array-bracket-newline': [ 'error', 'consistent' ],\n  '@stylistic/array-bracket-spacing': [ 'error', 'always' ],\n  '@stylistic/array-element-newline': [ 'error', 'consistent' ],\n  '@stylistic/arrow-parens': [ 'error', 'as-needed' ],\n  '@stylistic/arrow-spacing': [ 'error', { before: true, after: true } ],\n  '@stylistic/block-spacing': [ 'error', 'always' ],\n  '@stylistic/comma-spacing': [ 'error', { before: false, after: true } ],\n  '@stylistic/comma-style': [ 'error', 'last' ],\n  '@stylistic/comma-dangle': [ 'error', 'always-multiline' ],\n  '@stylistic/computed-property-spacing': [ 'error', 'never' ],\n  '@stylistic/dot-location': [ 'error', 'property' ],\n  '@stylistic/eol-last': 'error',\n  '@stylistic/function-call-spacing': [ 'error', 'never' ],\n  '@stylistic/function-paren-newline': [ 'error', 'consistent' ],\n  '@stylistic/generator-star-spacing': [ 'error', { before: false, after: true, method: { before: true, after: false } } ],\n  '@stylistic/implicit-arrow-linebreak': [ 'error', 'beside' ],\n  '@stylistic/indent': [ 'error', 2, { SwitchCase: 1, ignoredNodes: [ 'JSXElement', 'JSXElement > *', 'JSXAttribute', 'JSXIdentifier', 'JSXNamespacedName', 'JSXMemberExpression', 'JSXSpreadAttribute', 'JSXExpressionContainer', 'JSXOpeningElement', 'JSXClosingElement', 'JSXFragment', 'JSXOpeningFragment', 'JSXClosingFragment', 'JSXText', 'JSXEmptyExpression', 'JSXSpreadChild' ] } ],\n  '@stylistic/jsx-quotes': [ 'error', 'prefer-double' ],\n  '@stylistic/key-spacing': [ 'error', { singleLine: { beforeColon: false, afterColon: true }, multiLine: { beforeColon: false, afterColon: true, mode: 'minimum' } } ],\n  '@stylistic/keyword-spacing': [ 'error', { before: true, after: true } ],\n  '@stylistic/linebreak-style': [ 'error', 'unix' ],\n  '@stylistic/lines-between-class-members': [ 'error', 'always', { exceptAfterSingleLine: true } ],\n  '@stylistic/multiline-ternary': [ 'error', 'always-multiline' ],\n  '@stylistic/new-parens': 'error',\n  '@stylistic/no-confusing-arrow': [ 'error', { allowParens: true } ],\n  '@stylistic/no-extra-parens': [ 'error', 'functions' ],\n  '@stylistic/no-extra-semi': 'error',\n  '@stylistic/no-floating-decimal': 'warn',\n  '@stylistic/no-mixed-spaces-and-tabs': 'error',\n  '@stylistic/no-multi-spaces': [ 'error', { ignoreEOLComments: true, exceptions: { VariableDeclarator: true, ArrayExpression: true } } ],\n  '@stylistic/no-multiple-empty-lines': [ 'error', { max: 1, maxEOF: 1, maxBOF: 0 } ],\n  '@stylistic/no-trailing-spaces': 'error',\n  '@stylistic/no-whitespace-before-property': 'error',\n  '@stylistic/nonblock-statement-body-position': [ 'error', 'beside' ],\n  '@stylistic/object-curly-newline': [ 'error', { consistent: true } ],\n  '@stylistic/type-generic-spacing': [ 'error' ],\n  '@stylistic/type-named-tuple-spacing': [ 'error' ],\n  '@stylistic/object-curly-spacing': [ 'error', 'always' ],\n  '@stylistic/object-property-newline': [ 'error', { allowAllPropertiesOnSameLine: true } ],\n  '@stylistic/operator-linebreak': [ 'error', 'after', { overrides: { '?': 'before', ':': 'before' } } ],\n  '@stylistic/padded-blocks': [ 'error', 'never' ],\n  '@stylistic/quote-props': [ 'error', 'consistent-as-needed' ],\n  '@stylistic/quotes': [ 'error', 'single', { avoidEscape: true } ],\n  '@stylistic/rest-spread-spacing': [ 'error', 'never' ],\n  '@stylistic/semi': [ 'error', 'always' ],\n  '@stylistic/semi-spacing': [ 'error', { before: false, after: true } ],\n  '@stylistic/semi-style': [ 'error', 'last' ],\n  '@stylistic/space-before-blocks': [ 'error', 'always' ],\n  '@stylistic/space-before-function-paren': [ 'error', 'always' ],\n  '@stylistic/space-in-parens': [ 'error', 'never' ],\n  '@stylistic/space-infix-ops': 'error',\n  '@stylistic/space-unary-ops': [ 'error', { words: true, nonwords: false } ],\n  '@stylistic/spaced-comment': [ 'error', 'always', { markers: [ 'global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',' ] } ],\n  '@stylistic/switch-colon-spacing': 'error',\n  '@stylistic/template-curly-spacing': [ 'error', 'never' ],\n  '@stylistic/template-tag-spacing': [ 'error', 'never' ],\n  '@stylistic/wrap-iife': [ 'error', 'any' ],\n  '@stylistic/yield-star-spacing': [ 'error', 'after' ],\n  '@stylistic/brace-style': [ 'error', 'stroustrup', { allowSingleLine: false } ],\n  'max-len': 'off'\n};\n\nconst config_jsdoc: Rules = {\n  'jsdoc/tag-lines': [ 'error', 'any', { startLines: 1 } ],\n  'jsdoc/require-jsdoc': 'off',\n  'jsdoc/require-param-description': 'off',\n  'jsdoc/require-property-description': 'off',\n  'jsdoc/require-returns-description': 'off'\n};\n\ntype StyleOpts = {\n  commaDangle?: boolean,\n  singleBlocks?: boolean\n  lineLength?: null|number|number[],\n};\n\nexport default {\n  config: {\n    jsdoc: { rules: config_jsdoc },\n\n    // TOOD: add a set for JS only that works without typescript-eslint\n    // recommendedJS: { rules: basic_rules };\n\n    recommended: { rules: config_typescript },\n\n    stylistic: (opts: StyleOpts): ESConfig => {\n      const {\n        commaDangle = true,\n        lineLength = null,\n        singleBlocks = false\n      } = opts;\n\n      const dynamic: Rules = {};\n      dynamic['@stylistic/brace-style'] = [ 'error', 'stroustrup', { allowSingleLine: !!singleBlocks } ];\n      dynamic['@stylistic/comma-dangle'] = [ 'error', commaDangle ? 'always-multiline' : 'never' ];\n\n      let code = 120;\n      let comment = 120;\n      if (lineLength && lineLength !== Infinity) {\n        if (Array.isArray(lineLength)) {\n          if (isFinite(+lineLength[0])) {\n            code = +lineLength[0];\n            comment = code;\n          }\n          if (lineLength.length > 1 && isFinite(+lineLength[1])) {\n            comment = +lineLength[1];\n          }\n        }\n        else if (isFinite(lineLength) && typeof lineLength === 'number') {\n          code = lineLength;\n          comment = lineLength;\n        }\n      }\n      if (lineLength === 0 || lineLength === null || lineLength === Infinity) {\n        dynamic['max-len'] = [ 'off' ];\n      }\n      else {\n        dynamic['max-len'] = [ 'error', {\n          code: code,\n          comments: comment,\n          tabWidth: 2,\n          ignorePattern: '^\\\\s*\\\\* @\\\\S', // allow long lines in type comments\n          ignoreUrls: true,\n          ignoreStrings: true,\n          ignoreTemplateLiterals: true,\n          ignoreRegExpLiterals: true\n        } ];\n      }\n\n      return {\n        plugins: {\n          '@stylistic': stylistic\n        },\n        rules: Object.assign({}, config_style, dynamic)\n      };\n    }\n  }\n};\n"],"mappings":"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","names":[]}